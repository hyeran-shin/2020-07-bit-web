<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>java-web</display-name>
  
  <!-- 
  	<servlet> ...</servlet>
  		- 서블릿 클래스 등록
  		- 내부 요소<servlet-name>을 활용하여 식별!
  		- 내부 요소<servlet-name>은 web.xml 내에서 식별하기 위한 이름일뿐!
  		    요청 들어온 url을 잡아주는 <servlet-mapping>과 연결시켜주기 위해!
  		    
  	<servlet-mapping> ... </servlet-mapping>
  		- 내부 요소 <url-pattern>을 가지는데,
  		    이는 웹 서버로 들어오는 요청 URL을 받아주기 위함!
  		  action ="/java-web/hello" -> "/java-web/hello" (요청 url)
  		    단 , 기본적으로 프로젝트 경로는 생략! -> "/hello"
  		- 내부 요소 <servlet-name>은 등록된 <servlet>과 연결하기 위해
  		
  	[동작 순서]
  		1. JSP나 HTML 페이지에서 날아오는 요청(url)을 
  			<servlet-mapping>의 <url-pattern>이 받는다.
  		2. <servlet-mapping>에 설정한 <servlet-name>을 가지고 
  			web.xml 내에서 해당 이름으로 등록된 <servlet>을 찾는다.
  		3. 찾은 <servlet>내의 <servlet-class> 정보로, 
  			실제 요청을 처리할 서블릿 클래스로 전달!
   -->
  
  <servlet>
  	<servlet-name>hello</servlet-name>
  	<servlet-class>com.bit.servlet.Hello</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>hello</servlet-name>
  	<url-pattern>/hello</url-pattern>
  </servlet-mapping>
  
  <!-- Servlet Class 등록 -->
  <servlet>
  	<servlet-name>method</servlet-name>
  	<servlet-class>com.bit.servlet.MethodServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>method</servlet-name>
  	<url-pattern>/method</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>
