<?xml version="1.0" encoding="UTF-8"?>

<beans
	xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
	">
	
	<!-- validator, conversionService, messageConverter 자동 등록 -->
	<mvc:annotation-driven/>
	
	<!-- Annotation 활성화 -->
	<context:annotation-config/>
	
	<!-- Bean 등록할 클래스 범위 설정 -->
	<context:component-scan base-package="com.bit.api.controller"/>
	<!-- 
		spring-servlet.xml 파일은 웹 환경 설정
			-> Controller 역할을 수행하는 Bean만을 관리하겠다.
		base-package="com.bit"라면,
		com.bit 패키지 하위의 모든 Bean을 관리하게 된다.
			-> @Controller, @Service, @Repository(DAO라고 생각), @Component(재활용하기 위해), ... 전부 다
		mvc에 맞는 controller만 관리하게? 
	 -->
	
	<!--  기본 뷰 리졸버 (View Resolver) -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 메시지 컨버터 (Message Converters) -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
			</list>
		</property>
	</bean>
	<!-- 
		Message Converter
			- JSON이나 XML을 이용한 AJAX 기능이나 서비스 개발에 활용
			- HTTP 요청 메시지 RequestBody,
			  HTTP 응답 메시지 ResponseBody를 한번에 관리!
			- 특정 파라미터의 @RequestBody, @ResponseBody 형태로 사용
			- AnnotationMethodHandlerAdapter를 통해 등록 및 동작
				@ResponseBody가 붙어있는 Method, 요청 시 동작하는 Method
					-> HandlerMethod (핸들러 메소드)
			리스너:
			핸들러:
			
			Response(응답)시 핸들러 메소드의 @ResponseBody와 함께 반환되는,
			객체의 종류(String, List, Map, User, ...)에 따라,
			해당 메시지 컨버터가 동작하여 브라우저로 전송, 뷰와 관련 없음.
			
	 -->
</beans>









