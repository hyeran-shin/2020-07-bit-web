<?xml version="1.0" encoding="UTF-8"?>

<beans
	xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- 의존 주입할 영문 계산기 클래스 빈 등록  -->
	<bean id="calculator" class="DI.CalculatorEN"/>
	<!-- 
		MyCalculator my = new MaCalculator(7, 3, calculator);
		
		등록한 Bean을 생성하기 위해 Container는 생성자를 호출한다.
		MyCalculator 클래스를 해당 인자로 받아줄 생성자가 없다면(class="DI.MyCalculator" 에 정의를 안 해 놨다면,)
			-> BeanCreationException
			-> *Container가 호출할 생성자 및 Setter를 정의해야한다.
	 -->
	 <bean id="myCalculator" class="DI.MyCalculator">
	 	
	 	<constructor-arg>
	 		<value type="int">7</value> <!-- 첫번쨰 인자로 int  형식 준다. -->
	 	</constructor-arg>
	 	
	 	<!-- <constructor-arg>
	 		<value type="int">3</value>
	 	</constructor-arg> -->
	 	<constructor-arg value="3"/> <!--  했을 때 bean=calculatro 가 밑에있으면 정상 동작 -->
	 	
	 	<!--  위치 상관 없음, 아래있다가 위로 올라와도 상관 없ㄷ -->
	 	<constructor-arg>
	 		<ref bean="calculator"/>
	 	</constructor-arg>
	 	
	 	<!-- 
	 		매개변수의 type이 정해진 것과 아닌 것의 차이!
	 		생성자의 빈 설정 매개변수 순서와 상관없이 타입에 의해 동작
	 		
	 		(int, int, Value(현재는 Object 임)) 이와 같이 정의되어 있다.
	 		각각의 타입을 지정해 준 경우는 순서가 상관이 없는데,
	 		타입을 생략한 경우 인자가 잘 못 전달될 수 있다.
	 		
	 		(3, calculator, 7)
	 		매개변수가 int, Value, int 형식으로 전달되면, 	정상수행
	 		
	 		(calculator, 3, 7)
	 		매개변수가 Value, int, Value 형식으로 전달되면, 	예외발생
	 			-> *생성자 혼동
	 		(3, 7, calculator)
	 		단, Value가 전달받는 타입으로 형 변환이 가능하다면, 	정상수행
	 		
	 		type을 지정하지 않을 시 의존 주입할 인자 타겟을 찾아 주입시키지만,
	 		자동 변환이 불가능하다면 예외 발생!
	 		(문자열 -> 정수로 변환 후 
	 		
	 		
	 		자동으로 이러한 형식을 찾아 매개변수를 전달해 호출한다.
	 		new MyCalculator(7, 3, calculator);
	 		원래 매개변수 인자 개수에 따라 호출 되는 것과 같다.
	 		 bean 에서 설정하면 자동으로 스프링에서 해준다. -> 매개변수 순서를 지켜야한다.
	 		 int, int, object
	 		 3, 7, 
	 		 7, 3 
	 		 순서에 따라 다름.
	 		 
	 		
	 		
	 	 -->
	 </bean>
</beans>
		
		
		
		
		
		
		
		