<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
	">
	<!-- mvc 필요 없음 -->
	
	<!-- auto proxy -->
	<aop:aspectj-autoproxy />
	
	<context:annotation-config />
	<context:component-scan base-package="com.bit.mysite.service, 
								com.bit.mysite.repository, 
								com.bit.mysite.exception, 
								com.bit.mysite.aspect" >
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
			<!-- 
				include-filter : Scan 대상에 포함시켜라.
				exclude-filter : Scan 대상에 제외시켜라.
			 -->
	</context:component-scan>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>
		
		
	<!-- @Repository라 applicationContext에서 한다? -->
	<!-- MySQL dataSource -->
  	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
      <property name="url" value="jdbc:mysql://localhost:3306/mysite?serverTimezone=UTC"/>
      <property name="username" value="root"/>
      <property name="password" value="root"/>
    </bean>
   
    <!-- MyBatis SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"/>
      <property name="configLocation" value="classpath:mybatis/configuration.xml"/>
    </bean>
   	<!-- 
   		configLogation은 마이바티스 XML설정파일의 위치를 지정하기 위해 사용된다
		<property name="필드명" value="들어갈 값" />
			value 	-> String (문자열 형식)
			ref 	-> Object (Bean) xml에 만들어 놨던 객체 
			
		Bean 등록 시 주의해야 할 점
			[Java.lang.String] 관련 또는 Convert (변환) 관련 예외 시 
			필드 또는 들어갈 데이터의 타입을 확인   	
   	 -->
   
    <!-- MyBatis SqlSession Template -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
		
</beans>